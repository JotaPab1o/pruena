/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.conectar;
import static Vista.Muestras.idMatriz;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ESTACION 4
 */
public class Ingresomatriz1 extends javax.swing.JFrame {
   static int id=0;
     ResultSet result;
     String Nombreanalisis = "";
     static int idMatriz = 0;
      String Nommbrefila = "";
      int row = 0;
      public int selectedRow;
      int fila = 0;

    /**
     * Creates new form Ingresomatriz
     */
    public Ingresomatriz1() {
        initComponents();
        llenarLab();
        llenarAnalisis();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtRegistroingreso = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtObservacionesingreso = new javax.swing.JTextField();
        txtSotaingreso = new javax.swing.JTextField();
        dateIngreso = new com.toedter.calendar.JDateChooser();
        DateMuestreo = new com.toedter.calendar.JDateChooser();
        cmbLaboratorioingreso = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtIdentificacioningreso = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbAnalisisingreso = new javax.swing.JComboBox<>();
        btnAnalisis = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAnalisis = tablaAnalisis = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        ;
        btnSalir = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("N° de Registro");

        jLabel4.setText("Fecha de muestreo");

        jLabel2.setText("Fecha de Ingreso");

        jLabel8.setText("Laboratorio");

        jLabel9.setText("N° Sota");

        jLabel7.setText("Observaciones");

        cmbLaboratorioingreso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));
        cmbLaboratorioingreso.setToolTipText("");

        jLabel6.setText("Identificacion");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(10, 10, 10)
                        .addComponent(txtObservacionesingreso))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel9))
                            .addComponent(jLabel8)
                            .addComponent(jLabel6))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSotaingreso)
                            .addComponent(txtRegistroingreso)
                            .addComponent(dateIngreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DateMuestreo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbLaboratorioingreso, 0, 342, Short.MAX_VALUE)
                            .addComponent(txtIdentificacioningreso))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtRegistroingreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(DateMuestreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cmbLaboratorioingreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtSotaingreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtIdentificacioningreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(txtObservacionesingreso, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jLabel3.setText("DATOS DE MATRIZ");

        jLabel5.setText("ANALISIS");

        jLabel10.setText("Analisis");

        cmbAnalisisingreso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));
        cmbAnalisisingreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAnalisisingresoActionPerformed(evt);
            }
        });

        btnAnalisis.setText("AGREGAR");
        btnAnalisis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalisisActionPerformed(evt);
            }
        });

        tablaAnalisis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaAnalisis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAnalisisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaAnalisis);

        btnSalir.setText("FINALIZAR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.setBorderPainted(false);
        btnBorrar.setDefaultCapable(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(cmbAnalisisingreso, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAnalisis))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBorrar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jLabel3)
                        .addGap(359, 359, 359)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalir)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(cmbAnalisisingreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAnalisis))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(btnBorrar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
       try {
           idMatriz = 0;
           id=0;
           
           dispose();
           cn.close();
//            cmbAnalisisingreso.setEnabled(true);
//            btnAnalisis.setEnabled(true);
//            tablaAnalisis.setEnabled(true);
       } catch (SQLException ex) {
           Logger.getLogger(Ingresomatriz1.class.getName()).log(Level.SEVERE, null, ex);
       }

    }//GEN-LAST:event_btnSalirActionPerformed

    private void cmbAnalisisingresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAnalisisingresoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAnalisisingresoActionPerformed

    private void btnAnalisisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalisisActionPerformed
     
        if(validacionIngresoMuestra()){
            
                JOptionPane.showMessageDialog(this, "Rellena todos los campos antes de ingresar un analisis");
    }
        else{
            
        if (id==0){
                    try {
                        BuscarultimoMatriz();
                        guardarIngreso();
                        insertarMuestra();
                        cn.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(Ingresomatriz1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    insertarMuestra();         
                }
        }
    }//GEN-LAST:event_btnAnalisisActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
      
        if(validacionSeleccionarfila() ){
         
            JOptionPane.showMessageDialog(this, "Selecciona una fila");
        }
        else{

              conectar cc= new conectar();
        Connection cn= cc.conexion();
        String query = ("DELETE FROM analisis WHERE nombre = '"+Nommbrefila+"' AND fk_idmuestras = '"+id+"'");
            try {
                PreparedStatement pst= cn.prepareStatement(query);
           //     pst.setInt(1, row);
                int n = pst.executeUpdate();
                llenarTabla();
            } catch (Exception e) {
                Logger.getLogger(Ingresomatriz1.class.getName()).log(Level.SEVERE, null, e);
            }
            

   //     DELETE FROM analisis 
            

   //     DELETE FROM analisis 

        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void tablaAnalisisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAnalisisMouseClicked
       obtenerFila();        // TODO add your handling code here:
    }//GEN-LAST:event_tablaAnalisisMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ingresomatriz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ingresomatriz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ingresomatriz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ingresomatriz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ingresomatriz1().setVisible(true);
            }
        });
    }
    
      public void obtenerFila(){
        
         DefaultTableModel modelo = (DefaultTableModel)tablaAnalisis.getModel();
            fila = tablaAnalisis.getSelectedRow();
            Nommbrefila = (String) modelo.getValueAt(fila,0);
            System.out.println(Nommbrefila);
    }
      
      
        private void llenarLab(){
            String cmb= "SELECT * FROM laboratorios";
        try {
            Statement st=cn.createStatement();
            ResultSet set = st.executeQuery(cmb);
            // Bucle while para la consulta
            while (set.next()){
                // rellena el combobox a partir de la consulta
                cmbLaboratorioingreso.addItem(set.getString("nombre"));
            } // cn.close();

        } catch (SQLException e) {
            System.err.println("error consulta");
             Logger.getLogger(Ingresomatriz1.class.getName()).log(Level.SEVERE, null, e);
        }   
    }
            private void llenarAnalisis(){
            String cmb= "SELECT * FROM listaanalisis";
        try {
            Statement st=cn.createStatement();
            ResultSet set = st.executeQuery(cmb);
            // Bucle while para la consulta
            while (set.next()){
                // rellena el combobox a partir de la consulta
                cmbAnalisisingreso.addItem(set.getString("nombre"));
            } // cn.close();

        } catch (SQLException e) {
            System.err.println("error consulta");
        }   
    }
  public void Buscarultimo() throws SQLException{
              conectar cc= new conectar();
        Connection cn= cc.conexion();
        String query = "select idMuestras from muestras order by idMuestras desc limit 1"; 
  
                
                PreparedStatement pst = cn.prepareStatement(query);
                result=pst.executeQuery();
                 if (result.next()){
                     id=result.getInt("idMuestras");
                     System.out.println(id);
                     pst.close();
                 }
    }
  
   void llenarTabla() throws SQLException{
             conectar cc= new conectar();
        Connection cn= cc.conexion();
     DefaultTableModel modelo = new DefaultTableModel();
                String query = "SELECT * FROM analisis WHERE fk_idmuestras ='"+id+"'";
                PreparedStatement pst = cn.prepareStatement(query);
                result=pst.executeQuery();
                modelo.setColumnIdentifiers(new Object[]{"Analisis"});
                try {
                    while(result.next()){
                        
                        modelo.addRow(new Object[]{result.getString("nombre")});
                        System.out.println(id);
                        
                    }
                    tablaAnalisis.setModel(modelo);
                    pst.close();
     } catch (Exception e) {
          Logger.getLogger(Ingresomatriz1.class.getName()).log(Level.SEVERE, null, e);
                    System.out.println("error al llenar la tabla");
     }
      
     }
   
     public void insertaranalisis(){
               conectar cc= new conectar();
        Connection cn= cc.conexion();
            String add="INSERT INTO analisis ( nombre, fk_idmuestras) VALUES ('"+Nombreanalisis+"','"+id+"')";
            try { 
            PreparedStatement pst = cn.prepareStatement(add);
            int result =pst.executeUpdate(add);
            
            if (result >0 ){
                
                System.out.println("insertado");
                System.out.println(Nombreanalisis);
                System.out.println("+"+id);
                pst.close();
            }else{
                System.out.println(Nombreanalisis);
                System.out.println("+"+id);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Ingresomatriz1.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
    }
     
     void guardarIngreso() throws SQLException{
                        conectar cc= new conectar();
        Connection cn= cc.conexion();
         
        int a =  traerUltimoNregistro();
         
        a++;
         
                    String ins="INSERT INTO muestras (nregistro, identificacion, fechaIngreso, fechaMuestreo, fk_laboratorios, nsota, observaciones, fk_matrices ) VALUES(?,?,?,?,?,?,?,?)";

                 try {
            PreparedStatement pst = cn.prepareStatement(ins);
            
            pst.setInt(1, a );
            pst.setString(2, txtIdentificacioningreso.getText());
            pst.setDate(3, new java.sql.Date(dateIngreso.getDate().getTime()));
            pst.setDate(4, new java.sql.Date(DateMuestreo.getDate().getTime()));
            pst.setInt(5, cmbLaboratorioingreso.getSelectedIndex());
            pst.setString(6, txtSotaingreso.getText());
            pst.setString(7, txtObservacionesingreso.getText());
            pst.setInt(8, idMatriz);
            
            
            int n= pst.executeUpdate();
            pst.close();

            if(n>0)
            {
                
                JOptionPane.showMessageDialog(this, "Se guardaron los datos");
         
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Error");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Ingresomatriz1.class.getName()).log(Level.SEVERE, null, ex);

        }            
        
     }
     void insertarMuestra(){
           Nombreanalisis = (String) cmbAnalisisingreso.getSelectedItem();   
        try {
            Buscarultimo();
            insertaranalisis();   
            llenarTabla();
        } catch (SQLException ex) {
            Logger.getLogger(Ingresomatriz1.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
     
     void BuscarultimoMatriz() throws SQLException{
                 conectar cc= new conectar();
        Connection cn= cc.conexion();
        String query = "select id_matrices from matrices order by id_matrices desc limit 1"; 
  
                
                PreparedStatement pst = cn.prepareStatement(query);
                result=pst.executeQuery();
                 if (result.next()){
                     idMatriz=result.getInt("id_matrices");
                     System.out.println("el numero es "+idMatriz);
                     pst.close();
                     
                 }
    }

              boolean validacionIngresoMuestra(){
         
             if (txtRegistroingreso.getText() == "" || dateIngreso.getDate() == null || DateMuestreo.getDate() == null || cmbLaboratorioingreso.getSelectedItem().equals("Seleccione...") || txtSotaingreso.getText() == "" || txtIdentificacioningreso.getText() == "" || txtObservacionesingreso.getText() == "") { 

              return true;  
       
             }else{
               return false;
          }
   
              }
               boolean validacionSeleccionarfila(){
         
         if(fila==0){
             
              return true; 
         }else{

            return false;
        }
              }
               
               
   int traerUltimoNregistro() throws SQLException{
                   
                   
                    int a = 0;

                    
                String query = "Select * from muestras order by idMuestras DESC LIMIT 1";
                PreparedStatement pst = cn.prepareStatement(query);
                result=pst.executeQuery();
               
                try {
                    while(result.next()){
                        
                       a = Integer.parseInt(result.getString("nregistro"));
 
                    }
                    
     } catch (Exception e) {
         Logger.getLogger(Ingresomatriz1.class.getName()).log(Level.SEVERE, null, e);
                    System.out.println("error trae ultimo");
     }
                
                return a;
               }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateMuestreo;
    private javax.swing.JButton btnAnalisis;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cmbAnalisisingreso;
    private javax.swing.JComboBox<String> cmbLaboratorioingreso;
    private com.toedter.calendar.JDateChooser dateIngreso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAnalisis;
    private javax.swing.JTextField txtIdentificacioningreso;
    private javax.swing.JTextField txtObservacionesingreso;
    private javax.swing.JTextField txtRegistroingreso;
    private javax.swing.JTextField txtSotaingreso;
    // End of variables declaration//GEN-END:variables
         conectar cc= new conectar();
         Connection cn= cc.conexion();
}
